#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 4.17
# In conjunction with Tcl version 8.6
#    Oct 07, 2018 08:48:37 PM JST  platform: Windows NT
#    Oct 07, 2018 11:29:04 PM JST  platform: Windows NT
#    Oct 07, 2018 11:52:37 PM JST  platform: Windows NT

import traitclass
import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True


def set_Tk_var():
    global TraitList
    TraitList = StringVar()
    global traitsearched
    traitsearched = StringVar()
    global triggersearched
    triggersearched = StringVar()

def QueryTrait():
    print('traitedit_support.QueryTrait')
    sys.stdout.flush()

def ReloadEdit():
    print('traitedit_support.ReloadEdit')
    sys.stdout.flush()

def SaveEdit():
    print('traitedit_support.SaveEdit')
    sys.stdout.flush()

def ValidEdit():
    print('traitedit_support.ValidEdit')
    sys.stdout.flush()

def FilterTrait():
    print('traitedit_support.FilterTrait')
    sys.stdout.flush()

def GoToTrait():
    print('traitedit_support.GoToTrait')
    sys.stdout.flush()

def OpenFile():
    print('traitedit_support.OpenFile')
    traitmod.parse_edct(".")
    TraitList.set(traitmod.traits.get_names())
    sys.stdout.flush()
    
    w.Viewer.insert(INSERT, traitmod.traits[0].as_string())

def Quit():
    print('traitedit_support.Quit')
    sys.stdout.flush()
    destroy_window()

def ReloadFile():
    print('traitedit_support.ReloadFile')
    sys.stdout.flush()

def SaveAs():
    print('traitedit_support.SaveAs')
    sys.stdout.flush()

def Valid():
    print('traitedit_support.Valid')
    sys.stdout.flush()

def ViewTrait():
    print('traitedit_support.ViewTrait')
    sys.stdout.flush()

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

global traitmod
traitmod = traitclass.EDCT()

if __name__ == '__main__':
    import traitedit
    traitedit.vp_start_gui()








